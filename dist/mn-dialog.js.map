{"version":3,"sources":["scripts/mn-dialog.class.js"],"names":["MnDialog","self","_this","_ret","_classCallCheck","this","setOpenEvents","setCloseEvents","_possibleConstructorReturn","setEventListener","button","addEventListener","openDialog","id","buttons","document","querySelectorAll","open","Array","from","forEach","close","body","esc","event","keyCode","isOpened","classList","contains","dialog","querySelector","remove","target","getAttribute","add","previousDialog","stopPropagation","clickButtonClose","clickOutside","tagName","HTMLElement","customElements","define"],"mappings":"sxCAAMA,SAAAA,SAAAA,cACJ,QAAAA,UAAYC,MAAM,GAAAC,OAAAC,IAIhB,OAJgBC,iBAAAC,KAAAL,UAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,SAAAA,WAAAA,OAAAA,eAAAA,WAAAA,KAAAA,KAAaA,OACbC,MAAKI,gBACLJ,MAAKK,iBACLJ,KAAOF,KAAPO,2BAAAN,MAAAC,2GAYA,QAASM,kBAAiBC,QACxBA,OAAOC,iBAAiB,QAASC,YATnC,GAAMC,IAAKR,KAAKQ,GACVC,QAAUC,SAASC,iBAAT,4BAAsDH,GAAtD,MACZD,WAAaP,KAAKY,IAEtBC,OACGC,KAAKL,SACLM,QAAQX,2DAQX,GAAMK,SAAUC,SAASC,iBAAiB,uBACpCK,MAAQhB,KAAKgB,KAEnBH,OACGC,KAAKL,SACLM,QAAQ,SAAAV,QAAA,MAAUA,QAAOC,iBAAiB,QAASU,SAEtDN,SAASO,KAAKX,iBAAiB,QAASU,OACxCN,SAASJ,iBAAiB,QAAS,WACjC,GAAMY,KAAwB,KAAlBC,MAAMC,QACdC,SAAWX,SAASO,KAAKK,UAAUC,SAAS,mBAChD,IAAIL,KAAOG,SAAU,CACnB,GAAMG,QAASd,SAASe,cAAc,mBACtCf,UAASO,KAAKK,UAAUI,OAAO,oBAC/BF,OAAOF,UAAUI,OAAO,4CAM5B,GAAMlB,IAAKW,MAAMQ,OAAOC,aAAa,oBACjCJ,OAASd,SAASe,cAAT,aAAoCjB,GAEjDE,UAASO,KAAKK,UAAUO,IAAI,mBAE5B,IAAMC,gBAAiBpB,SAASe,cAAc,mBAC1CK,iBACFA,eAAeR,UAAUI,OAAO,UAElCF,OAAOF,UAAUO,IAAI,wCAGjBV,OACJA,MAAMY,iBACN,IAAMC,kBAAmBb,MAAMQ,OAAOC,aAAa,qBAC7CK,aAAwC,SAAzBd,MAAMQ,OAAOO,SAAsBf,MAAMQ,OAAOL,UAAUC,SAAS,mBAExF,IAAIS,kBAAoBC,aAAc,CACpC,GAAMT,QAASd,SAASe,cAAc,mBACtCf,UAASO,KAAKK,UAAUI,OAAO,oBAC/BF,OAAOF,UAAUI,OAAO,yBA/DPS,YAoEvBC,gBAAeC,OAAO,YAAa1C","file":"mn-dialog.js","sourcesContent":["class MnDialog extends HTMLElement {\n  constructor(self) {\n    self = super(self)\n    this.setOpenEvents()\n    this.setCloseEvents()\n    return self\n  }\n\n  setOpenEvents() {\n    const id = this.id\n    const buttons = document.querySelectorAll(`button[data-open-dialog=\"${id}\"]`)\n    let openDialog = this.open\n\n    Array\n      .from(buttons)\n      .forEach(setEventListener)\n\n    function setEventListener(button) {\n      button.addEventListener('click', openDialog)\n    }\n  }\n\n  setCloseEvents() {\n    const buttons = document.querySelectorAll('[data-close-dialog]')\n    const close = this.close\n\n    Array\n      .from(buttons)\n      .forEach(button => button.addEventListener('click', close))\n\n    document.body.addEventListener('click', close)\n    document.addEventListener('keyup', () => {\n      const esc = event.keyCode === 27\n      let isOpened = document.body.classList.contains('mn-dialog-opened')\n      if (esc && isOpened) {\n        const dialog = document.querySelector('mn-dialog.opened')\n        document.body.classList.remove('mn-dialog-opened')\n        dialog.classList.remove('opened')\n      }\n    })\n  }\n\n  open() {\n    const id = event.target.getAttribute('data-open-dialog')\n    let dialog = document.querySelector(`mn-dialog#${id}`)\n\n    document.body.classList.add('mn-dialog-opened')\n\n    const previousDialog = document.querySelector('mn-dialog.opened')\n    if (previousDialog) {\n      previousDialog.classList.remove('opened')\n    }\n    dialog.classList.add('opened')\n  }\n\n  close(event) {\n    event.stopPropagation()\n    const clickButtonClose = event.target.getAttribute('data-close-dialog')\n    const clickOutside = event.target.tagName === 'BODY' && event.target.classList.contains('mn-dialog-opened')\n\n    if (clickButtonClose || clickOutside) {\n      const dialog = document.querySelector('mn-dialog.opened')\n      document.body.classList.remove('mn-dialog-opened')\n      dialog.classList.remove('opened')\n    }\n  }\n}\n\ncustomElements.define('mn-dialog', MnDialog)\n"]}